<?xml version='1.0' encoding='UTF-8'?>
<project>
  <actions/>
  <description></description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <hudson.model.ParametersDefinitionProperty>
      <parameterDefinitions>
        <hudson.model.BooleanParameterDefinition>
          <name>SONAR_ANALISIS</name>
          <description></description>
          <defaultValue>true</defaultValue>
        </hudson.model.BooleanParameterDefinition>
        <hudson.model.BooleanParameterDefinition>
          <name>DO_RELEASE</name>
          <description></description>
          <defaultValue>false</defaultValue>
        </hudson.model.BooleanParameterDefinition>
      </parameterDefinitions>
    </hudson.model.ParametersDefinitionProperty>
  </properties>
  <scm class="hudson.plugins.git.GitSCM" plugin="git@2.5.3">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <url>ssh://git@{{ ci_host_name }}:6022/jenkins/sample-java-project.git</url>
        <credentialsId>git_jenkins_{{ ci_host_name }}</credentialsId>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>master</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <submoduleCfg class="list"/>
    <extensions>
      <hudson.plugins.git.extensions.impl.LocalBranch>
        <localBranch>master</localBranch>
      </hudson.plugins.git.extensions.impl.LocalBranch>
    </extensions>
  </scm>
  <canRoam>true</canRoam>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <triggers/>
  <concurrentBuild>false</concurrentBuild>
  <builders>
    <org.jenkinsci.plugins.conditionalbuildstep.singlestep.SingleConditionalBuilder plugin="conditional-buildstep@1.3.5">
      <condition class="org.jenkins_ci.plugins.run_condition.core.StringsMatchCondition" plugin="run-condition@1.0">
        <arg1>${SONAR_ANALISIS}</arg1>
        <arg2>false</arg2>
        <ignoreCase>true</ignoreCase>
      </condition>
      <buildStep class="hudson.plugins.gradle.Gradle" plugin="gradle@1.25">
        <description></description>
        <switches></switches>
        <tasks>clean build</tasks>
        <rootBuildScriptDir></rootBuildScriptDir>
        <buildFile></buildFile>
        <gradleName>2.14.1</gradleName>
        <useWrapper>false</useWrapper>
        <makeExecutable>false</makeExecutable>
        <fromRootBuildScriptDir>true</fromRootBuildScriptDir>
        <useWorkspaceAsHome>false</useWorkspaceAsHome>
        <passAsProperties>false</passAsProperties>
      </buildStep>
      <runner class="org.jenkins_ci.plugins.run_condition.BuildStepRunner$Fail" plugin="run-condition@1.0"/>
    </org.jenkinsci.plugins.conditionalbuildstep.singlestep.SingleConditionalBuilder>
    <org.jenkinsci.plugins.conditionalbuildstep.singlestep.SingleConditionalBuilder plugin="conditional-buildstep@1.3.5">
      <condition class="org.jenkins_ci.plugins.run_condition.core.BooleanCondition" plugin="run-condition@1.0">
        <token>${SONAR_ANALISIS}</token>
      </condition>
      <buildStep class="hudson.plugins.gradle.Gradle" plugin="gradle@1.25">
        <description></description>
        <switches>-Dsonar.login=${SONAR_USER} -Dsonar.password=${SONAR_PASSWORD} -Dsonar.host.url=${SONAR_ADDR}</switches>
        <tasks>clean build sonarqube</tasks>
        <rootBuildScriptDir></rootBuildScriptDir>
        <buildFile></buildFile>
        <gradleName>2.14.1</gradleName>
        <useWrapper>false</useWrapper>
        <makeExecutable>false</makeExecutable>
        <fromRootBuildScriptDir>true</fromRootBuildScriptDir>
        <useWorkspaceAsHome>false</useWorkspaceAsHome>
        <passAsProperties>false</passAsProperties>
      </buildStep>
      <runner class="org.jenkins_ci.plugins.run_condition.BuildStepRunner$Fail" plugin="run-condition@1.0"/>
    </org.jenkinsci.plugins.conditionalbuildstep.singlestep.SingleConditionalBuilder>
    <org.jenkinsci.plugins.conditionalbuildstep.singlestep.SingleConditionalBuilder plugin="conditional-buildstep@1.3.5">
      <condition class="org.jenkins_ci.plugins.run_condition.core.BooleanCondition" plugin="run-condition@1.0">
        <token>${DO_RELEASE}</token>
      </condition>
      <buildStep class="hudson.plugins.gradle.Gradle" plugin="gradle@1.25">
        <description></description>
        <switches>-Pupload.password=${NEXUS_PASSWORD}
-Pupload.user=${NEXUS_USER}
-Pupload.repository.docker=${DOCKER_REGISTRY}
-Pupload.repository.snapshot=${NEXUS_SNAPSHOT_REPO}
-Pupload.repository.release=${NEXUS_RELEASE_REPO}</switches>
        <tasks>release</tasks>
        <rootBuildScriptDir></rootBuildScriptDir>
        <buildFile></buildFile>
        <gradleName>2.14.1</gradleName>
        <useWrapper>false</useWrapper>
        <makeExecutable>false</makeExecutable>
        <fromRootBuildScriptDir>true</fromRootBuildScriptDir>
        <useWorkspaceAsHome>false</useWorkspaceAsHome>
        <passAsProperties>false</passAsProperties>
      </buildStep>
      <runner class="org.jenkins_ci.plugins.run_condition.BuildStepRunner$Fail" plugin="run-condition@1.0"/>
    </org.jenkinsci.plugins.conditionalbuildstep.singlestep.SingleConditionalBuilder>
  </builders>
  <publishers/>
  <buildWrappers>
    <org.jenkinsci.plugins.credentialsbinding.impl.SecretBuildWrapper plugin="credentials-binding@1.9">
      <bindings>
        <org.jenkinsci.plugins.credentialsbinding.impl.UsernamePasswordMultiBinding>
          <credentialsId>nexus_jenkins_{{ ci_host_name }}</credentialsId>
          <usernameVariable>NEXUS_USER</usernameVariable>
          <passwordVariable>NEXUS_PASSWORD</passwordVariable>
        </org.jenkinsci.plugins.credentialsbinding.impl.UsernamePasswordMultiBinding>
        <org.jenkinsci.plugins.credentialsbinding.impl.UsernamePasswordMultiBinding>
          <credentialsId>sonar_jenkins_{{ ci_host_name }}</credentialsId>
          <usernameVariable>SONAR_USER</usernameVariable>
          <passwordVariable>SONAR_PASSWORD</passwordVariable>
        </org.jenkinsci.plugins.credentialsbinding.impl.UsernamePasswordMultiBinding>
      </bindings>
    </org.jenkinsci.plugins.credentialsbinding.impl.SecretBuildWrapper>
  </buildWrappers>
</project>